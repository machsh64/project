<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!-- 扫描组件(除控制层) -->
    <context:component-scan base-package="com.ren.web20">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 导入jdbc配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 配置Druid数据库连接池 -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置sqlSessionFactoryBean -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 设置mybatis的核心配置文件的路径 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 设置数据源(注意，在此处设置即相当于在mybatis核心配置文件中配置，此处配置后即不用再次在mybatis核心配置文件中配置) -->
        <property name="dataSource" ref="druidDataSource"/>
        <!-- 设置默认类型别名 -->
        <property name="typeAliasesPackage" value="com.ren.web20.pojo"/>
        <!-- 映射文件的路径 只有映射文件对应的包与mapper接口所在的包不一致时才需要设置 -->
        <!--<property name="mapperLocations" value="classpath:mappers/*.xml"/>-->
    </bean>

    <!-- 配置mapper接口的扫描，可以将指定包下的所有mapper接口通过
        SqlSession创建代理实现类对象，并将这些对象交给IOC容器管理 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 设置mapper接口的路径 -->
        <property name="basePackage" value="com.ren.web20.mapper"/>
    </bean>

    <!-- 配置事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"/>
    </bean>

    <!-- 开启事务的注解驱动 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>