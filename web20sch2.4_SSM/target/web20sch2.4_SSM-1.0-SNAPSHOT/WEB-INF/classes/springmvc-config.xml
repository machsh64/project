<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 扫描控制层组件 -->
    <context:component-scan base-package="com.ren.web20.controller"/>
    <context:component-scan base-package="com.ren.web20.interceptor"/>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>  <!-- 优先级为1 -->
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 会给前端响应的请求加上value地址 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 会给前端响应的请求加上value后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!-- 配置文件上传解析器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

    </bean>

    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <ref bean="firstInterceptor"/>  <!-- 3，可以通过注解扫描到@Component，然后通过ref应用 -->
    </mvc:interceptors>

    <!-- 使用xml配置异常处理 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- key设置要预处理的方法出现的异常，value设置出现该异常时要跳转的页面所对应的逻辑视图 -->
                <prop key="java.lang.Exception">error</prop>
            </props>
        </property>
        <!-- exceptionAttribute属性名，value设置共享在请求域中的异常信息的属性名 -->
        <property name="exceptionAttribute" value="ex"/>
    </bean>

    <!-- 开启mvc的注解驱动(默认) -->
    <mvc:annotation-driven/>

    <!-- 配置默认的servlet处理静态资源 -->
    <mvc:default-servlet-handler/>

    <!-- 配置视图控制器 -->
    <mvc:view-controller path="/" view-name="/index/index"/>
    <mvc:view-controller path="/index.html" view-name="index/index"/>

</beans>